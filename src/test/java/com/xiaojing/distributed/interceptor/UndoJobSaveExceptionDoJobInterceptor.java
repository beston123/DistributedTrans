package com.xiaojing.distributed.interceptor;import com.google.inject.Inject;import com.google.inject.Singleton;import com.xiaojing.distributed.util.Context;import com.xiaojing.distributed.dao.UndoJobDao;import org.aopalliance.intercept.MethodInterceptor;import org.aopalliance.intercept.MethodInvocation;import org.slf4j.Logger;import org.slf4j.LoggerFactory;/** * this interceptor will throw exception before the undoJob save to the storage * then the TransactionMethodInterceptor will roll back the session * and the usrDao update user amount will be roll back */@Singletonpublic class UndoJobSaveExceptionDoJobInterceptor implements MethodInterceptor {    private static final Logger LOGGER = LoggerFactory.getLogger(UndoJobSaveExceptionDoJobInterceptor.class);    @Inject    private UndoJobDao undoJobDao;    //TODO explicit disable session inheritance    @Override    public Object invoke(MethodInvocation methodInvocation) throws Throwable {        Context context = (Context) methodInvocation.getArguments()[0];        //clear current undo log at do action start        context.getPendingUndoJobs().clear();        Object result;        try {            result = methodInvocation.proceed();            throw new RuntimeException();           /* //add current undo log to total undo log and save current undo log to storage            context.getDistributeJob().getUndoJobList().addAll(context.getPendingUndoJobs());            context.getDistributeJob().getDbKeyContextList().addAll(context.getKeyContexts());            for (UndoJob undoJob : context.getPendingUndoJobs()) {                LOGGER.debug("====undoJobDao 12======");                undoJobDao.insertUndo(context.getConnection(), undoJob);            }            context.getConnection().commit();            context.getConnection().close();            context.setConnection(null);*/        } catch (Exception e) {            context.getConnection().rollback();            context.getConnection().close();            throw e;        }        //return result;    }}